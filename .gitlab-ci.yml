stages:
  - build
  - upload
  - release

variables:
  PACKAGE_VERSION : $CI_COMMIT_TAG
  PAYLINE_ZIP_PACKAGE: "woocommerce-payline-v${PACKAGE_VERSION}.zip"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/woocommerce-payline-release/${PACKAGE_VERSION}"

# Cache for dependencies
cache:
  paths:
    - node_modules/

build_job:
  stage: build
  image: node:20-buster
  script:
    - npm install
    - npm run build
    - npm run build:release
    - ls -lisa
    - mv payline.zip $PAYLINE_ZIP_PACKAGE
    - ls -lisa
  artifacts:
    paths:
      - $PAYLINE_ZIP_PACKAGE
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_TAG

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - build_job
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $PAYLINE_ZIP_PACKAGE "${PACKAGE_REGISTRY_URL}/${PAYLINE_ZIP_PACKAGE}"

# Release stage
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release $CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - upload
  release:
    name: "Release $CI_COMMIT_TAG "
    description: "For additionnal information please read the CHANGELOG."
    tag_name: $CI_COMMIT_TAG
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: woocommerce-payline-$CI_COMMIT_TAG (zip)
          url: "${PACKAGE_REGISTRY_URL}/${PAYLINE_ZIP_PACKAGE}"
          link_type: package